imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @SuppliercheckAdminBundle/Resources/config/admin.yml}
 #  - { resource: '@SonataUserBundle/Resources/config/services.xml' }
framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'SonataCoreBundle:Form:datepicker.html.twig'

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType        
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    SuppliercheckUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~  

# Swiftmailer Configuration
swiftmailer:
    transport: "gmail"
    host:      ""
    username:  "ashley.lubin@westwing.fr"
    password:  "14Ashley"
    spool:     { type: memory }

#swiftmailer:
#    transport:  gmail
#    encryption: ssl
#    auth_mode:  login
#    host:       smtp.gmail.com

 #Sonata Admin
#swiftmailer:
#    transport:  gmail
#    encryption: ssl
#    auth_mode:  login
#    host:       smtp.gmail.com

 
 # app/config/config.yml
#sonata_block:
#    default_contexts: [cms]
#    blocks:
#        # Enable the SonataAdminBundle block
#        sonata.admin.block.admin_list:
#            contexts:   [admin]
        # Your other blocks   
sonata_block:
    default_contexts: [sonata_page_bundle]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        admin.block.service.importcsv: ~
        sonata.block.service.text:
        sonata.block.service.rss:
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
      #  sonata.block.service.text: # used to if you plan to use Sonata user routes
            
    default_contexts: [cms]
   # blocks:
       #sonata.admin.block.admin_list:
        #    contexts: [admin]
        #admin.block.service.importcsv: ~
        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]
        #sonata.block.service.text:
        #sonata.block.service.rss:
      

        # Some specific block from the SonataMediaBundle
        #sonata.media.block.media:
        #sonata.media.block.gallery:
        #sonata.media.block.feature_media:
sonata_admin:
    title:      SupplierCheck
    title_logo: bundles/suppliercheckadmin/images/supplierCheck.png
    
    dashboard:
        
         blocks:
             # display a dashboard block
             - { position: left, type: sonata.admin.block.admin_list }
#             - { position: right, type: sonata.admin.block.stats }
#             -    class:    col-lg-3 col-xs-6
#             -    position: top
#             -    type:     sonata.admin.block.stats
#             -    settings:
#                    code: sonata.news.admin.comment
#                    icon: fa-comments
#                    text: Open Comment
#                    filters:
#                        status: { type: 3, value: 0 } # 3 => NumberType::TYPE_EQUAL

         groups:
             Content:
                label: Content
                items: 
                     - sonata.admin.campaign
                     - sonata.admin.product
                     - sonata.admin.comment  
                roles: [ROLE_USER] 
                
             Supplier:
                label: Supplier
                items:
                     - sonata.admin.campaignvalidation
                     - sonata.admin.productvalidation
                roles: [ROLE_USER]

             Utilisateur:
                label: Utilisateur
                items:                     
                     - sonata.admin.user
                     - sonata.admin.group
                roles: [ROLE_USER]    
                
                
    security:
        handler: sonata.admin.security.handler.role    

#supplier:
#    title:      SupplierCheck
#    title_logo: bundles/suppliercheckadmin/images/supplierCheck.png
#    
#    dashboard:
#         blocks:
#             # display a dashboard block
#             - { position: left, type: sonata.admin.block.admin_list }
#             #- { position: right, type: admin.block.service.importcsv }
#             
#             

             
sonata_user:
    security_acl: false
    manager_type: orm # can be orm or mongodb
    class:
        user: Suppliercheck\UserBundle\Entity\User
        group: Suppliercheck\UserBundle\Entity\Group

    profile:  # Profile Form (firstname, lastname, etc ...)
        # As in SonataAdminBundle's dashboard
        form:
            type:               sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            #validation_groups:  [Profile]   
            validation_groups:
                # Defaults:
                - Profile
                - Default
        # Profile show page is a dashboard as in SonataAdminBundle
        dashboard:
            blocks:
                - { position: left, type: sonata.block.service.text, settings: { content: "Welcome "} }
           #     - { position: left, type: sonata.order.block.recent_orders, settings: { title: Recent Orders, number: 5, mode: public }}
           #    - { position: right, type: sonata.timeline.block.timeline, settings: { max_per_page: 15 }}
           #    - { position: right, type: sonata.news.block.recent_posts, settings: { title: Recent Posts, number: 5, mode: public }}
           #    - { position: right, type: sonata.news.block.recent_comments, settings: { title: Recent Comments, number: 5, mode: public }}
        # Customize user portal menu by setting links

        menu:
            - { route: 'sonata_user_profile_show', label: 'sonata_profile_title', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle'}
            #- { route: 'sonata_customer_addresses', label: 'link_list_addresses', domain: 'SonataCustomerBundle'}
            - { route: 'sonata_user_profile_edit_authentication', label: 'link_edit_authentication', domain: 'SonataUserBundle'}
            #- { route: 'sonata_order_index', label: 'order_list', domain: 'SonataOrderBundle'} 

fos_user:
 
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Suppliercheck\UserBundle\Entity\User

    group:
        group_class:   Suppliercheck\UserBundle\Entity\Group        
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)


    profile:  # Authentication Form
        form:
            type:               sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Authentication] # Please note : this is not the default value
    service:
        user_manager: sonata.user.orm.user_manager    
        

#services:
#    admin.block.service.importcsv:
#       class: Suppliercheck\AdminBundle\Block\ImportCSVService
#       arguments: [ "admin.block.service.importcsv", @templating, @service_container ]
#       tags:
#         - { name: sonata.block }